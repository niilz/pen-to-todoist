[package]
name = "pen-to-todoist"
version = "0.1.0"
authors = ["nilSinger <niilz@outlook.de>"]
edition = "2018"

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Os", "--enable-mutable-globals"]

[lib]
crate-type = ["cdylib", "rlib"]


[dependencies]
wasm-bindgen = {versio = "0.2.63", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.18"
js-sys = "0.3.45"
base64 = "0.13"
chrono = "0.4.19"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_urlencoded = "0.7"
dotenv = "0.15"
uuid = { version = "0.8", features = ["v4"] }
jsonwebtoken = "7.2"
serde_derive = "^1.0.59"

[dependencies.web-sys]
version = "0.3.4"
features = [
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
  'console',
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
